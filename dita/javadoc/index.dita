<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="javadoc-plug-in">
  <title>Javadoc Plug-in</title>
  <abstract>
    <shortdesc>
       This is a <xref href="https://www.dita-ot.org/plugins" format="html"
       scope="external">DITA-OT Plug-in</xref> used to auto-create valid DITA-based
       <xref href="https://docs.oracle.com/javase/1.5.0/docs/guide/javadoc/index.html"
       format="html" scope="external">Javadoc</xref> documentation. The initial source 
       of the documentation can be generated directly using the 
       <xref href="https://github.com/markusbernhardt/xml-doclet"
       format="html" scope="external">JavaDoc XML Doclet</xref>. The XML file can be
       added to the source and processed as if it had been written in DITA.
    </shortdesc>
  </abstract>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Javadoc</indexterm>
        <indexterm>plug-in</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body/>
  <topic id="example">
    <title outputclass="h3 mt-3">Example</title>
    <body>
      <image deliveryTarget="html" scope="external" href="https://jason-fox.github.io/fox.jason.passthrough.javadoc/javalogo.png" outputclass="float-start mt-1 me-3" height="55"/>
      <p>
         <term>Javadoc</term> is a tool that parses the declarations and documentation 
         comments in a set of source files and produces a set of HTML pages describing 
         the classes, interfaces, constructors, methods, and fields.
      </p>
      <p>
         JavaDoc supports doclets used to customize Javadoc output. A doclet is a program
         written with the Doclet API that specifies the content and format of the output
         to be generated by the Javadoc tool.
      </p>
      <p>
         A library exists to preprocess Javadoc comments from Java source code to a XML
         document. It can be downloaded <xref
         href="https://github.com/markusbernhardt/xml-doclet" format="html" scope="external">here</xref>.
         This DITA-OT plugin processes a JavaDoc XML and the converts it to DITA
         allowing the generation of PDF API documentation.
      </p>
      <fig id="sample-javadoc">
        <title>Sample Javadoc</title>
        <codeblock scale="80" outputclass="language-java">/**
 * Effector is the interface for Casbin effectors.
 */
public interface Effector {
    /**
     * mergeEffects merges all matching results collected by the enforcer into a single decision.
     *
     * @param expr the expression of [policy_effect].
     * @param effects the effects of all matched rules.
     * @param results the matcher results of all matched rules.
     * @return the final effect.
     */
    boolean mergeEffects(String expr, Effect[] effects, float[] results);
}</codeblock>
      </fig>
      <fig>
          <title>Javadoc PDF Output</title>
          <image outputclass="img-thumbnail" scalefit="yes" href="https://jason-fox.github.io/fox.jason.passthrough.javadoc/javadoc-output.png" scope="external">
            <alt/>
          </image>
        </fig>
    </body>
  </topic>
</topic>