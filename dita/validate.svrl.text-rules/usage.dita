<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="usage">
  <title>Usage</title>
  <body/>
  <topic id="spell-checking-a-document-from-the-command-line">
    <title outputclass="h3 mt-3">Spell-checking a document from the command line</title>
    <body>
      <note type="tip">
         A test document can be found within the plug-in at:
         <filepath>PATH_TO_DITA_OT/plugins/com.here.validate.svrl.text-rules/sample</filepath>
      </note>
      <section id="creating-an-svrl-file">
        <title outputclass="h4 mt-3">Creating an SVRL file</title>
        <p>
           To create an SVRL file with the spell-checker plug-in use the <option>text-rules</option>
           transform with the <parmname>--args.validate.mode=report</parmname> parameter.
        </p>
        <ul>
          <li>
            From a terminal prompt move to the directory holding the document to validate
          </li>
          <li>
            SVRL file creation can be run like any other DITA-OT transform:
          </li>
        </ul>
        <codeblock scale="80" outputclass="language-bash"><cmdname>dita</cmdname> <parmname>--format</parmname> <option>text-rules</option> \
    <parmname>--output</parmname> out \
    <parmname>--input</parmname> document.ditamap \
    <parmname>--args.validate.mode</parmname>=<option>report</option></codeblock>
        <p>
           Once the command has run, an <codeph>SVRL</codeph> file is created:
        </p>
        <fig>
          <title>SVRL Output</title>
          <codeblock scale="80" outputclass="language-xml"><coderef href="./src/output.svrl"/></codeblock>
        </fig>
      </section>
      <section id="echoing-results-to-the-command-line">
        <title outputclass="h4 mt-3">Echoing results to the command line</title>
        <p>
           To echo results to the command line with the spell-checker plug-in use the
           <option>text-rules</option> transform without specifying a <option>report</option>.
        </p>
        <ul>
          <li>
             Spell-checking (<option>text-rules</option>) can be run like any other DITA-OT
             transform:
          </li>
        </ul>
        <codeblock scale="80" outputclass="language-bash"><cmdname>dita</cmdname> <parmname>--format</parmname> <option>text-rules</option> \
    <parmname>--input</parmname> document.ditamap</codeblock>
        <p>
           Once the command has run, all errors and warnings are echoed to the command line:
        </p>
        <fig>
          <title>Command Line Output</title>
          <codeblock scale="80" outputclass="language-bash"><coderef href="./src/error1.txt"/></codeblock>
        </fig>
        <p>
           Additionally, if an error occurs, the command will fail:
        </p>
        <fig>
          <title>Command Line Output with Failure</title>
          <codeblock scale="80" outputclass="language-bash"><coderef href="./src/error2.txt"/></codeblock>
        </fig>
      </section>
      <section id="auto-correction-from-the-command-line">
        <title outputclass="h4 mt-3">Auto-correction from the command line</title>
        <p>
           To auto-correct spelling mistakes with the spell-checker plug-in use the
           <option>auto-correct</option> transform.
        </p>
        <ul>
          <li>
             Auto-correction (<option>auto-correct</option>) can be run like any other
             DITA-OT transform:
          </li>
        </ul>
        <codeblock scale="80" outputclass="language-bash"><cmdname>dita</cmdname> <parmname>--format</parmname> <option>auto-correct</option> \
    <parmname>--input</parmname> document.ditamap</codeblock>
        <p>
           Once the command has run spelling mistakes will have been removed from the document.
        </p>
        <note>
           The auto-correct <option>transtype</option> only removes spelling, duplicate and
           grammar errors specified in the dictionary files
        </note>
      </section>
      <section id="parameter-reference">
        <title outputclass="h4 mt-3">Parameter Reference</title>
        <indexterm><parmname>args.validate.ignore.rules</parmname></indexterm>
        <indexterm><parmname>args.validate.blacklist</parmname></indexterm>
        <indexterm><parmname>args.validate.cachefile</parmname></indexterm>
        <indexterm><parmname>args.validate.check.case</parmname></indexterm>
        <indexterm><parmname>args.validate.color</parmname></indexterm>
        <indexterm><parmname>args.validate.mode</parmname></indexterm>
        <indexterm><parmname>svrl.customization.dir</parmname></indexterm>
        <indexterm><parmname>svrl.filter.file</parmname></indexterm>
        <indexterm><parmname>text-rules.ruleset.file</parmname></indexterm>
        <ul>
          <li>
             <parmname>args.validate.ignore.rules</parmname> - Comma separated list of rule
             IDs to be ignored
          </li>
          <li>
             <parmname>args.validate.blacklist</parmname> - Comma separated list of words
             that should not be present in the running text
          </li>
          <li>
             <parmname>args.validate.cachefile</parmname> - Specifies the location of cache
             file to be used. Validation will only run across altered files if this
             parameter is present
          </li>
          <li>
             <parmname>args.validate.check.case</parmname> - Comma separated list of words
             which have a specified capitalization
          </li>
          <li>
             <parmname>args.validate.color</parmname> - When set, errors and warnings are
             Output highlighted using ANSI color codes
          </li>
          <li>
             <parmname>args.validate.mode</parmname> - Validation reporting mode. The
             following values are supported:
            <ul>
              <li>
                 <option>strict</option> - Outputs both warnings and errors. Fails on errors and
                 warnings.
              </li>
              <li>
                 <option>default</option> - Outputs both warnings and errors. Fails on errors only
              </li>
              <li>
                 <option>lax</option> - Ignores all warnings and outputs errors only. Fails on
                 Errors only
              </li>
              <li>
                 <option>report</option> - Creates an SVRL file
              </li>
            </ul>
          </li>
          <li>
             <parmname>svrl.customization.dir</parmname> - Specifies the customization directory
          </li>
          <li>
             <parmname>svrl.filter.file</parmname> - Specifies the location of the XSL file
             used to filter the echo output. If this parameter is not present, the default
             echo output format will be used.
          </li>
          <li>
             <parmname>text-rules.ruleset.file</parmname> - Specifies severity of the rules
             to apply. If this parameter is not present, default severity levels will be used.
          </li>
        </ul>
      </section>
    </body>
  </topic>
  <topic id="spell-checking-a-document-from-the-using-ant">
    <title outputclass="h4 mt-3">Spell-checking a document from the using ANT</title>
    <prolog>
      <metadata>
        <keywords>
          <indexterm>ANT</indexterm>
        </keywords>
      </metadata>
    </prolog>
    <body>
      <p>
         An ANT build file is supplied in the same directory as the sample document. The
         main target can be seen below:
      </p>
      <fig>
          <title>ANT Target</title>
        <codeblock scale="80" outputclass="language-xml"><coderef href="./src/ant-target.xml"/></codeblock>
      </fig>
    </body>
  </topic>
</topic>