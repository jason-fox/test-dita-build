<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="usage">
  <title>Usage</title>
  <abstract>
    <shortdesc>
       Like any other transform, when invoked directly, the prettier requires an input
       document.
    </shortdesc>
  </abstract>
  <body>
    <section id="prettifying-dita-files-for-a-document">
      <title outputclass="h3 mt-3">Prettifying DITA files for a document</title>
      <p>
         To prettify DITA files for a document, set the <parmname>transtype</parmname>
         parameter to <option>pretty-dita</option>, or pass the <parmname>--format</parmname>=<option>pretty-dita</option>
         option to the <cmdname>dita</cmdname> command line.
      </p>
      <codeblock scale="80" outputclass="language-bash"><cmdname>dita</cmdname> <parmname>--format</parmname> <option>pretty-dita</option> \
    <parmname>--input</parmname> document.ditamap</codeblock>
      <p>
         All <codeph>*.dita</codeph><xmlelement>topic</xmlelement> and <codeph>*.ditamap</codeph><xmlelement>map</xmlelement>
         files under that directory will be updated in place.
      </p>
    </section>
    <section id="prettifying-a-single-dita-file">
      <title outputclass="h3 mt-3">Prettifying a single DITA file</title>
      <p>
         Alternatively, to prettify a single DITA file, set the <parmname>--input</parmname>
         parameter to point to a <codeph>*.dita</codeph> file:
      </p>
      <codeblock scale="80" outputclass="language-bash"><cmdname>dita</cmdname> <parmname>--format</parmname> <option>pretty-dita</option> \
    <parmname>--input</parmname> topic.dita</codeblock>
      <p>
         The specified file will be updated in place.
      </p>
    </section>
    <section id="parameter-reference">
      <title outputclass="h3 mt-3">Parameter Reference</title>
      <indexterm><parmname>args.indent</parmname></indexterm>
      <indexterm><parmname>args.style</parmname></indexterm>
      <indexterm><parmname>args.print-width</parmname></indexterm>
      <indexterm><parmname>args.require-pragma</parmname></indexterm>
      <indexterm><parmname>args.insert-pragma</parmname></indexterm>
      <ul>
        <li>
           <parmname>args.indent</parmname> - How many characters to indent (default
           <option>4</option>)
        </li>
        <li>
           <parmname>args.style</parmname> - Whether to indent using <option>tabs</option>
           or <option>spaces</option> (default <option>spaces</option>)
        </li>
        <li>
           <parmname>args.print-width</parmname> - Specify the line length that the
           printer will wrap on (default <codeph>80</codeph>)
        </li>
        <li>
          <p>
             <parmname>args.require-pragma</parmname> - Restrict the plug-in to only format
             files that contain a special comment, called a pragma, at the top of the file
             (default <option>false</option>).
          </p>
          <p>
             This is very useful when gradually transitioning large, unformatted codebases
             to pretty-dita.
          </p>
          <p>
             For example, a file containing the following comment will be formatted when
             <parmname>args.require-pragma</parmname> is supplied if either of the following
             are present:
          </p>
          <codeblock scale="80" outputclass="language-xml">&lt;!-- @prettier --&gt;</codeblock>
          <codeblock scale="80" outputclass="language-xml">&lt;!-- @format --&gt;</codeblock>
          <p>
             <parmname>args.insert-pragma</parmname> - Insert a special <codeph>@format</codeph>
             marker at the top of files specifying that the file has been formatted with
             the plugin (default <codeph>false</codeph>)
          </p>
        </li>
      </ul>
    </section>
    <section id="ignoring-dita-files">
      <title outputclass="h3 mt-3">Ignoring DITA files</title>
      <p>
         The prettifier will ignore any DITA file containing a comment starting <codeph>prettier-ignore</codeph>
         - the file will not be updated.
      </p>
      <codeblock scale="80" outputclass="language-xml">...
&lt;topic id="basic-usage"&gt;
    &lt;!-- prettier-ignore --&gt;
    &lt;title&gt;Basic usage&lt;/title&gt;
    &lt;body outputclass="language-markup"&gt;
&lt;lines&gt;
This file really doesn't need formatting
    We want it to look this way.
&lt;/lines&gt;
        &lt;p&gt;This will also be left alone.&lt;/p&gt;
            &lt;p&gt;This will be left as well
        &lt;/p&gt;
    &lt;/body&gt;
&lt;/topic&gt;</codeblock>
    </section>
  </body>
</topic>